 @JavascriptInterface
    public String getWebUrl() {
        return SpUtils.getWebUrl();
    }

    @JavascriptInterface
    public void setWebUrl(String url) {
        Toast.makeText(getApplicationContext(), url, Toast.LENGTH_SHORT).show();
        SpUtils.setWebUrl(url);
    }

    @JavascriptInterface
    public String getBluetoothAddress() {
        return SpUtils.getBluetoothAddress();
    }

    @JavascriptInterface
    public void setBluetoothAddress(String address) {
        Toast.makeText(getApplicationContext(), address, Toast.LENGTH_SHORT).show();
        SpUtils.setBluetoothAddress(address);
    }

    @JavascriptInterface
    public String[] getSearchBluetoothList() {
        String[] list = new String[0];
        return list;
    }

    @JavascriptInterface
    public void print(String[] content) {
        String pairedAddress = AppUtils.getPairedAddress();
        if (null == pairedAddress) {
            Toast.makeText(getApplicationContext(), "not found address", Toast.LENGTH_SHORT).show();
            return;
        }

        if (pairedAddress.isEmpty()) {
            Toast.makeText(getApplicationContext(), "address is empty", Toast.LENGTH_SHORT).show();
            return;
        }

        Toast.makeText(getApplicationContext(), "success", Toast.LENGTH_SHORT).show();

        BluetoothTask bluetoothTask = new BluetoothTask(getApplicationContext());
        bluetoothTask.execute(pairedAddress, content, false);
    }

    @JavascriptInterface
    public boolean getDevMode() {
        return SpUtils.getDevMode();
    }

    @JavascriptInterface
    public void setDevMode(boolean devMode) {
        Toast.makeText(getApplicationContext(), devMode ? "show" : "hide", Toast.LENGTH_SHORT).show();
        SpUtils.setDevMode(devMode);

        runOnUiThread(() -> {
            try {
                LinearLayout debugView = findViewById(R.id.debugView);
                if (devMode) {
                    debugView.setVisibility(View.VISIBLE);
                } else {
                    debugView.setVisibility(View.GONE);
                }

            } catch (Exception e) {
                System.out.println(e.getMessage());
            }
        });
    }


=========================================================================


    public static String getWebUrl() {
        return getPreference("webUrl");
    }

    public static void setWebUrl(String webUrl) {
        setPreference("webUrl", webUrl);
    }

    public static String getBluetoothAddress() {
        return getPreference("bluetoothAddress");
    }

    public static void setBluetoothAddress(String bluetoothAddress) {
        setPreference("bluetoothAddress", bluetoothAddress);
    }

    public static String getSystemLog() {
        return getPreference("systemLog");
    }

    public static void setSystemLog(String systemLog) {
        setPreference("systemLog", systemLog);
    }

    public static boolean getDevMode() {
        return getPreference("devMode", true);
    }

    public static void setDevMode(boolean devMode) {
        setPreference("devMode", devMode);
    }
